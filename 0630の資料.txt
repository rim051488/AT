インディーゲーム
	国内クリエータ
	中国系アジアクリエータ
ハードウェア
	未来の技術
ミドルウェア
	ライブラリ
	
	
UnrealEngine→UnrealFest
Unity→Unite

SiliconStudio →エンジン作ってる会社
自社エンジン作ってる会社
	バンナム
	カプコン
	スクエニ
	コーエーテクモ
	サイゲームス
	ガンバリオン
サウンド(相当専門知識がいる→最低でもフーリエ変換など)
	CRIミドルウェア

色の設定をするときは、基本的に
RGBではなく、HSV(HSB)で設定するようにしよう。
RGB→コンピュータのための値
HSV→人のための値

DxLibの定数バッファ
0番：ライト・マテリアル
1番：座標変換用の行列等
2番：シャドウマップ用
3番：スキニング用(ボーン行列等)

複数マテリアルでできてるモデルの描画
マテリアル以外の情報
	頂点とインデックデータに分けられる
	
頂点データは座標＋法線＋UV＋ウェイト値など

ふつうは、使用する頂点のみを登録し、ポリゴンを
どう構成するかはインデックスデータで管理する


頂点データは、点のデータ
その点をどうやってつなぐのか、つないで面を作るのが
インデックスデータです。

座標→頂点データ
面→インデックスデータ

マテリアル→表面材質
なので、例えばミクさんのデータは
髪、肌、服
①髪マテリアルを適用すべきインデックスの範囲(0～999)
②肌マテリアルを適用すべきインデックスの範囲(1000～1044)
③服マテリアルを適用すべきインデックスの範囲(1045～2098)

マテリアルは、色とか、テクスチャのデータ以外に実は
インデックスの範囲データも持っている。

実行時どうなってんのかというと、範囲ごとに別で描画する。
①の描画
	①のマテリアルを適用→マテリアルの内容をGPUに転送
	①のインデックスの範囲のポリゴンを描画
②の描画
	②のマテリアルを適用→マテリアルの内容をGPUに転送
	②のインデックスの範囲のポリゴンを描画
③の描画
	③のマテリアルを適用→マテリアルの内容をGPUに転送
	③のインデックスの範囲のポリゴンを描画
なんていう風に、マテリアルごとに分かれています。


フォグとは何か？




点光源の明るさ=距離の二乗に反比例する
ある場所の光の強さ=元の光源の強さ/距離^2